# Use the official .NET SDK image as a build stage
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /app
COPY *.csproj ./
COPY MES.db ./
COPY aspnetapp.pfx ./
RUN dotnet restore
# Copy the rest of the application files
COPY . ./
RUN dotnet publish -c Release -o /out

# Use the official .NET runtime image for the runtime stage
FROM mcr.microsoft.com/dotnet/aspnet:8.0
WORKDIR /app
COPY --from=build /out .
COPY --from=build /app/aspnetapp.pfx .
COPY --from=build /app/MES.db .
EXPOSE 5206
# EXPOSE 50216


# ENV ASPNETCORE_HTTP_PORT=5206 
# ENV ASPNETCORE_HTTP_PORT=50216
ENV ASPNETCORE_URLS="https://+"
# ENV ASPNETCORE_URLS="https://+"
# ENV ASPNETCORE_Kestrel__Certificates__Default__Password="PwdPassword"
ENV ASPNETCORE_Kestrel__Certificates__Default__Path=/app/aspnetapp.pfx

# Se l'app Ã¨ stata compilata usando il metodo WebHost.CreateDefaultBuilder() precedente, 
# impostare ASPNETCORE_URLS (non ASPNETCORE_HTTP_PORTS). 
# Esempio: docker run --rm -it -p 8000:80 -e ASPNETCORE_URLS=http://*:80 <my-app>.



RUN ls 

# Set the entry point for the application
ENTRYPOINT ["dotnet", "MesApi.dll"]
